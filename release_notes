Current version 
cpu plotting is production ready.

gpu plotting limitations:
a.) need fast ssd. ( if ssd was QLC , it need fstrim again after plot done to avoid ``` fwrite() failed with: Bad address``` errors.
b.) ram require 110G free at least. so make sure you have enough swap file setup incase system out of memory crash.
c.) compressing phase fully GPU implementation need 24G vram like rtx3090.

---------------------------------------------------------------------------------
release v0.7 : 
a.) Add GPU compressing algo for 24G vram gpu like rtx 3090. Performance for 24G gpu increase 40%. ( only support 1 gpu yet.)


---------------------------------------------------------------------------------
release v0.6.5 : 
md5: 1d322c6d336f91aa0bea161fc2de718d
a.) Support multiple GPU plotting, max to 8 GPU.
use first gpu 
```--gpuid "0"```

use second gpu
```--gpuid "1"```

use gpu from 0 to 3
```--gpuid "0123"```

---------------------------------------------------------------------------------
release v0.6.4 : 
md5: 6aa5c223631df30a2225add9b0ae5468
a.) Add "--gthreads" parameter. which define how many gpu context threads for plotting.  every gpu context thread use centain amount of gpu vram resource. eg 8G vram good for 3 thread. If you only have 4G vram, set it to gthreads=1 will works too.
b.) Add "--gpuid" parameter, which can pick specific gpu if you have multiple. you can run too gpu plotter in parallel, but don't set two gpu into one ploter, which is not implemented yet.
c.) minor turning in plotting phase, 5% faster.

---------------------------------------------------------------------------------
release v0.6.3 : 
md5: e5a952759b93df447b8f59bbe043a6b1
a.) table7 compressing in gpu. minor performance improve.

---------------------------------------------------------------------------------
release v0.6.2.1 : 
md5 0a27804f2775d0b6e9695f18be23aea1
a.) partial gpu accelerated compressing phase implemented. compressing phase redue 40% time.
b.) memory usage turning , can be run in 128G ram without swap file.
c.) static link libstdc++ for running on rocky linux 9.1 and other linux distribution with gcc 11+ compiler.

---------------------------------------------------------------------------------
release v0.6.1
a.) add cpu support which without avx2 instruction set.
b.) move p1 tmp table6 into ram for some slow ssd write_failed() error.

---------------------------------------------------------------------------------
release v0.6
add "-G" for gpu phase 1 plotting.

---------------------------------------------------------------------------------
release v0.5
new algorithm implementation.
add "-R" for 110G ram plotting without ram disk. it plotting directly in ram by bypass the filesystem api. some performance gain.
